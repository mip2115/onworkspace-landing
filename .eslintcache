[{"/Users/mattpinchover/Documents/code/projects/coworking/coworking/src/redux/actions/navbar-actions/index.js":"1","/Users/mattpinchover/Documents/code/projects/coworking/coworking/src/components/navbar/index.js":"2"},{"size":302,"mtime":1609127365655,"results":"3","hashOfConfig":"4"},{"size":5587,"mtime":1609127406380,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sxc7at",{"filePath":"8","messages":"9","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/mattpinchover/Documents/code/projects/coworking/coworking/src/redux/actions/navbar-actions/index.js",[],"/Users/mattpinchover/Documents/code/projects/coworking/coworking/src/components/navbar/index.js",["11"],"import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport {\n  setSignupFormAction,\n  setHostSignupFormAction,\n  setDisplayMobileMenuAction,\n} from \"../../redux/actions/navbar-actions\";\nimport NavbarMobile from \"./navbar-mobile\";\nimport { disableAllInputFieldsErrorsAction } from \"../../redux/actions/signup-form-actions\";\nconst Navbar = (props) => {\n  const { displayMobileMenu, setDisplayMobileMenu } = props;\n  let listener = null;\n  const [scrollState, setScrollState] = useState(\"top\");\n\n  const handleDisplayMobileMenu = (e) => {\n    const { setDisplayMobileMenu, displayMobileMenu } = props;\n    setDisplayMobileMenu(!displayMobileMenu);\n  };\n  const handleClick = async (e) => {\n    const {\n      history,\n      setSignupForm,\n      setHostSignupForm,\n      disableAllInputFieldsErrors,\n      setIsLoading,\n      displayMobileMenu,\n      setDisplayMobileMenu,\n    } = props;\n    if (displayMobileMenu) {\n      setDisplayMobileMenu(false);\n    }\n\n    if (e.target.id == \"signUp\") {\n      disableAllInputFieldsErrors();\n      await setSignupForm(true);\n      const elem = document.getElementById(\"signup\");\n      const info = elem.getBoundingClientRect();\n\n      const bodyRect = document.body.getBoundingClientRect();\n      const offset = info.top - bodyRect.top;\n      var scrolled = document.scrollingElement.scrollTop;\n\n      window.scrollTo(info.left, offset - 150);\n    } else if (e.target.id == \"about\") {\n      const elem = document.getElementById(\"info\");\n      const info = elem.getBoundingClientRect();\n\n      const bodyRect = document.body.getBoundingClientRect();\n      const offset = info.top - bodyRect.top;\n      var scrolled = document.scrollingElement.scrollTop;\n\n      window.scrollTo(info.left, offset - 100);\n    } else if (e.target.id == \"applyToBeHost\") {\n      disableAllInputFieldsErrors();\n      await setSignupForm(false);\n      const elem = document.getElementById(\"signup\");\n      const info = elem.getBoundingClientRect();\n      const bodyRect = document.body.getBoundingClientRect();\n      const offset = info.top - bodyRect.top;\n      var scrolled = document.scrollingElement.scrollTop;\n      window.scrollTo(info.left, offset - 150);\n    }\n  };\n\n  useEffect(() => {\n    listener = document.addEventListener(\"scroll\", (e) => {\n      var scrolled = document.scrollingElement.scrollTop;\n      if (scrolled >= 120) {\n        setScrollState(\"scroll-navbar\");\n      } else {\n        setScrollState(\"top-navbar\");\n      }\n    });\n    return () => {\n      document.removeEventListener(\"scroll\", listener);\n    };\n  }, [scrollState]);\n  return (\n    <div className={`navbar ${scrollState}`}>\n      <div className=\"navbar-logo\">onCoffeespace()</div>\n      <div className=\"navbar-tabs\">\n        <div className=\"navbar-tab-mobile\">&#x2630;</div>\n        <div onClick={handleClick} className=\"navbar-tab apply-host-btn\">\n          <p id=\"applyToBeHost\" name=\"applyToBeHost\">\n            Apply to be a host\n          </p>\n        </div>\n        <div onClick={handleClick} className=\"navbar-tab\">\n          <p id=\"about\" name=\"about\">\n            About\n          </p>\n    <div className={`navbar-ctr ${scrollState}`}>\n      <div className={`navbar`}>\n        <div className=\"navbar-loading\"></div>\n        <div className=\"navbar-tabs\">\n          <div onClick={handleDisplayMobileMenu} className=\"navbar-tab-mobile\">\n            &#x2630;\n          </div>\n\n          <div onClick={handleClick} className=\"navbar-tab apply-host-btn\">\n            <p id=\"applyToBeHost\" name=\"applyToBeHost\">\n              Apply to be a host\n            </p>\n          </div>\n          <div onClick={handleClick} className=\"navbar-tab\">\n            <p id=\"about\" name=\"about\">\n              About\n            </p>\n          </div>\n          <div className=\"navbar-tab\">\n            <p>\n              <a\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n                href=\"mailto:mip2115@columbia\"\n              >\n                Contact\n              </a>\n            </p>\n          </div>\n          <div\n            id=\"signUp\"\n            name=\"signUp\"\n            onClick={handleClick}\n            className=\"navbar-tab\"\n          >\n            <p id=\"signUp\" name=\"signUp\">\n              Sign Up\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {displayMobileMenu && (\n        <div className=\"navbar-mobile\">\n          <div\n            onClick={() => setDisplayMobileMenu(false)}\n            className=\"navbar-mobile-tab\"\n          >\n            <a\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\n              href=\"mailto:mip2115@columbia\"\n            >\n              Contact\n            </a>\n          </div>\n          <div\n            onClick={handleClick}\n            id=\"about\"\n            name=\"about\"\n            className=\"navbar-mobile-tab\"\n          >\n            About\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    displayUserSignup: state.nav.displayUserSignup,\n    displayMobileMenu: state.nav.displayMobileMenu,\n  };\n};\nconst dispatchStateToProps = (dispatch) => {\n  return {\n    setSignupForm: (bool) => dispatch(setSignupFormAction(bool)),\n    disableAllInputFieldsErrors: () =>\n      dispatch(disableAllInputFieldsErrorsAction()),\n    setDisplayMobileMenu: (bool) => dispatch(setDisplayMobileMenuAction(bool)),\n  };\n};\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, dispatchStateToProps)\n)(Navbar);\n",{"ruleId":null,"fatal":true,"severity":2,"message":"12","line":162,"column":3},"Parsing error: Unexpected token\n\n  160 | };\n  161 | const mapStateToProps = (state) => {\n> 162 |   return {\n      |   ^\n  163 |     displayUserSignup: state.nav.displayUserSignup,\n  164 |     displayMobileMenu: state.nav.displayMobileMenu,\n  165 |   };"]