[{"/Users/mattpinchover/Documents/code/projects/coworking/coworking/src/components/utils/index.js":"1","/Users/mattpinchover/Documents/code/projects/coworking/coworking/src/components/navbar/index.js":"2"},{"size":685,"mtime":1608875136392,"results":"3","hashOfConfig":"4"},{"size":1819,"mtime":1608935023831,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sxc7at",{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mattpinchover/Documents/code/projects/coworking/coworking/src/components/utils/index.js",["10"],"/Users/mattpinchover/Documents/code/projects/coworking/coworking/src/components/navbar/index.js",["11","12","13"],{"ruleId":"14","severity":1,"message":"15","line":14,"column":44,"nodeType":"16","endLine":14,"endColumn":51},{"ruleId":"17","severity":1,"message":"18","line":11,"column":21,"nodeType":"19","messageId":"20","endLine":11,"endColumn":23},{"ruleId":"17","severity":1,"message":"18","line":15,"column":28,"nodeType":"19","messageId":"20","endLine":15,"endColumn":30},{"ruleId":"14","severity":1,"message":"21","line":23,"column":16,"nodeType":"22","endLine":30,"endColumn":7},"react-hooks/exhaustive-deps","The ref value 'domRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'domRef.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assignments to the 'listener' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression"]